---
description:
globs:
alwaysApply: false
---

프로젝트 초기에 requirement -> architecture -> task 를 작성하는 과정입니다.
마지막으로 사용자의 flavor에 따라 important를 업데이트하세요. (선호 라이브러리, 테스트코드 여부, 커밋 룰 등)

- 프로젝트 초기화 지침

  1. 원격 저장소 연결 해제: `git remote remove origin`
  2. 브랜치 이름 변경: `main` 브랜치를 `template`으로 변경
  3. 불필요한 파일 삭제: 기존의 `readme.md`, `package.json`, `cli.js` 등 제거
  4. `.gitignore` 파일 작성: `.cursor/` 디렉토리를 포함
  5. 고아 브랜치 생성 및 초기 커밋: `orphan` 브랜치를 `main`이라는 이름으로 생성 후 최초 커밋 수행

- requirement를 작성합니다.

  - 사용자로부터 입력받은 요구사항을 구체화해서 요구사항을 작성해주세요.
  - 필요한 경우 사용자에게 구체적인 내용을 질문하여 확정하세요.

- architecture 작성

  - requirement를 기반으로 architecture를 작성해주세요.
  - 사용하는 라이브러리, 폴더 구조, 설계 원칙 등을 포함하여 핵심 요구사항을 만족시키기 위한 기술적인 지침을 담고 있어야 합니다.

- task 작성

  - 작성된 requirement와 architecture에 따라 todo list를 구체화하고 업데이트 해주세요.
  - `## 작업의 시작`이 현재 진행중인 단계이므로 이후에 작성해주시면 됩니다.

- 사용자의 flavor에 따라 important를 업데이트하세요. (선호 라이브러리, 테스트코드 여부, 커밋 룰 등)

- 초기 readme를 작성하세요. 프로젝트의 목적 및 주요 라이브러리 주요 로직을 간략하게 작성합니다.
  - 금지어: 완벽, 완전, 최고 등 자체적으로 상향평가 하는 단어 또는 `.cursor/rule`의 존재를 알리는 표현은 금기 사항입니다.
