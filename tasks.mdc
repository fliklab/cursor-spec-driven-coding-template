---
description: 
globs: 
alwaysApply: false
---
## 1단계: 프로젝트 준비 및 초기 설정
- [ ] 프로젝트 목표 및 범위 정의
- [ ] 이해관계자 요구사항 수렴
- [ ] 프로젝트 계획 수립 (일정, 리소스, 예산 등)
- [ ] 위험 관리 계획 수립
- [ ] 기술 스택 및 개발 환경 선정
- [ ] 버전 관리 시스템 설정 (예: Git Repository 생성)
- [x] GitHub 레포지토리를 템플릿으로 설정
- [ ] GitHub API를 사용하여 비공개 저장소 생성 및 프로젝트 업로드
- [ ] 프로젝트 디렉토리 구조 설정

## 2단계: 요구사항 분석 및 설계
- [ ] 기능 요구사항 상세 분석 및 명세화
- [ ] 비기능 요구사항 정의 (성능, 보안, 사용성 등)
- [ ] 시스템 아키텍처 설계
- [ ] 데이터베이스 스키마 설계 (필요시)
- [ ] UI/UX 프로토타입 제작 및 검토 (해당하는 경우)
- [ ] API 명세 정의 (필요시)

## 3단계: 개발 환경 상세 설정
- [ ] 개발 도구 및 라이브러리 설치 (IDE, 프레임워크, SDK 등)
- [ ] 코드 스타일 가이드라인 설정 (ESLint, Prettier 등)
- [ ] 빌드 및 테스트 자동화 환경 구성 (CI/CD 초기 설정)

## 4단계: 구현
- [ ] 주요 기능 모듈 개발
- [ ] 단위 테스트 작성 및 실행
- [ ] 코드 리뷰 수행
- [ ] UI 개발 (해당하는 경우)
- [ ] API 개발 및 연동 (해당하는 경우)
- [ ] 데이터베이스 연동 (필요시)

## 5단계: 테스트
- [ ] 통합 테스트 계획 및 수행
- [ ] 시스템 테스트 계획 및 수행
- [ ] 인수 테스트 지원 (UAT)
- [ ] 성능 테스트 및 최적화 (필요시)
- [ ] 보안 취약점 점검
- [ ] 발견된 결함 수정 및 재테스트

## 6단계: 문서화
- [ ] 최종 사용자 매뉴얼 작성
- [ ] 개발 문서 (API 문서, 설계 문서 등) 업데이트
- [ ] 운영 가이드 작성
- [ ] README.md 업데이트 (프로젝트 개요, 설치 방법, 사용법 등)

## 7단계: 배포 준비
- [ ] 배포 환경 구성 (Staging, Production)
- [ ] 데이터 마이그레이션 계획 (필요시)
- [ ] 릴리즈 노트 작성
- [ ] 최종 빌드 및 패키징
- [ ] 배포 자동화 스크립트 검토 및 개선 (CI/CD 파이프라인 완성)

## 8단계: 배포 및 릴리즈
- [ ] 프로덕션 환경 배포
- [ ] 배포 후 시스템 안정성 모니터링
- [ ] 긴급 장애 대응 계획 점검

## 9단계: 프로젝트 종료 및 유지보수
- [ ] 프로젝트 최종 검토 및 회고
- [ ] 산출물 정리 및 보관
- [ ] 사용자 피드백 수집 및 분석 채널 마련
- [ ] 정기적인 시스템 모니터링 및 업데이트
- [ ] 버그 수정 및 기능 개선
- [ ] 이슈 트래킹 및 관리
